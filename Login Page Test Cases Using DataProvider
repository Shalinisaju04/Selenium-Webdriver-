package webpageTestingBasicsPackage;

import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import org.testng.Assert;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

public class LoginPageTestCasesUsingDataProvider extends AbstractWebDriverTest {
	// Creating DATAPROVIDER and giving it a name to pass all the usernames and its
	// passwords
	// passwords
	@DataProvider(name = "userIDAndPasswordDataProvider")
	public Object[][] userIDAndPasswordDP() {
		return new Object[][] { { "standard_user", "secret_sauce", true },
				{ "problem_user", "secret_sauce", true }, { "performance_glitch_user", "secret_sauce", true },
				{ "error_user", "secret_sauce", true }, { "visual_user", "secret_sauce", true },
				{ "standard_user", "", false }, { "problem_user", "", false },
				{ "performance_glitch_user", "", false }, { "error_user", "", false }, { "visual_user", "", false },
				{ "standard_user", "wrongPassword", false },
				{ "problem_user", "wrongPassword", false }, { "performance_glitch_user", "wrongPassword", false },
				{ "error_user", "wrongPassword", false }, { "visual_user", "wrongPassword", false },
				{ "", "", false }, { "", "secret_sauce", false }, { "Wrong username", "secret_sauce", false }, };
	}

	// USING THE DATAPROVIDER
	@Test(dataProvider = "userIDAndPasswordDataProvider")
	public void testPositiveLoginScenerios(String UserName, String Password,boolean IsLoginSuccessful) {
		// Verify if a user will be able to login with a valid username and valid &
		// password.
		driver.get("https://www.saucedemo.com/");
		WebElement userNameFeild = driver.findElement(By.id("user-name"));
		userNameFeild.sendKeys(UserName);
		WebElement password = driver.findElement(By.id("password"));
		password.sendKeys(Password);
		WebElement loginButton = driver.findElement(By.id("login-button"));
		loginButton.submit();
		sleep(2);
		if (IsLoginSuccessful) {
		// After successful login Logo,Products and Cart will be displayed
		// VERIFY lOGO Present
		WebElement logo = driver.findElement(By.className("app_logo"));
		Assert.assertEquals(true, logo.isDisplayed());
		// Verify Title Products is present
		WebElement productMenu = driver.findElement(By.className("title"));
		Assert.assertEquals(true, productMenu.isDisplayed());
		// Verify cart is present
		WebElement cart = driver.findElement(By.id("shopping_cart_container"));
		Assert.assertEquals(true, cart.isDisplayed());
	} else {
		// Following negative scenarios are verified
		// 1. Verify if a user cannot login with a valid username and an invalid
		// password.
		// 2. Verify that a user cannot login, when the both fields are blank and Submit
		// button is clicked.
		// 3. Verify if a user cannot login with a invalid username and an valid
		// password.
		// 4. Verify that a user cannot login, if any of the feilds (either user name or
		// password) is blank and Submit button is clicked
		WebElement userList = driver.findElement(By.id("login_credentials"));
		userList.isDisplayed();

	}
  }


}
